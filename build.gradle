buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
    }
    dependencies {
        //classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.0.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
plugins {
    id 'org.jetbrains.gradle.plugin.idea-ext' version '0.7'
}

idea.project.settings {
    delegateActions {
        delegateBuildRunToGradle = false
        testRunner = org.jetbrains.gradle.ext.ActionDelegationConfig.TestRunner.PLATFORM
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
//apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

mixin {
    add sourceSets.main, "uniquecrops.refmap.json"
    config 'uniquecrops.mixins.json'
}
version = "${mod_version}-${minecraft_version}"
group = 'com.bafomdad.uniquecrops'
archivesBaseName = 'uniquecrops'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.18.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=assets/uniquecrops/uniquecrops.mixins.json"

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                uniquecrops {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                uniquecrops {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'uniquecrops', '--all', '--output', file('src/generated/resources/')
//            args '--mod', 'uniquecrops', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                uniquecrops {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
//sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    maven {
        url "https://maven.blamejared.com"
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "curios"
        url "https://maven.theillusivec4.top/"
    }
}
dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
	
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-67")
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-67:api")

    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.4.3.122")
    compileOnly fg.deobf("mezz.jei:jei-1.18.2:9.4.3.122:api")

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18.2-5.0.6.3")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.18.2-5.0.6.3:api")
}
jar {
    manifest {
        attributes([
                "Specification-Title": "uniquecrops",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ss"),
                "MixinConfigs": "assets/uniquecrops/uniquecrops.mixins.json"
        ])
    }
}

task deobfJar(type: Jar) {
    classifier 'deobf'
    from sourceSets.main.output
    manifest {
        attributes([
                "Specification-Title": "uniquecrops",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConnector": "com.bafomdad.uniquecrops.MixinConnector"
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}